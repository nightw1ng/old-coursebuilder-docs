#summary How to modify the registration pages for your course.

<h1>Create Registration</h1>

<wiki:toc max-depth="2" />

== Registration page ==

When prospective students first visit your course, the app displays a registration page:

http://wiki.course-builder.googlecode.com/git/images/registration-parts.png

=== What happens from this page ===

The sample registration page asks one question, the student's name. This is just to show you that you _can_ ask questions on this page and store the information. Four files are involved in handling registration information. If you want to add extra registration questions, you must change these files:

  * {{{views/register.html}}}: This file contains the template for the registration page. By default, it stores the student's name in a variable named {{{form01}}}. To collect extra information from the student, add more input fields to the form in this file.

  * {{{models/model.py}}}: This file contains class definitions for the entities Course Builder stores ({{{Lesson}}}, {{{Unit}}}, and {{{Student}}}). In the definition of the {{{Student}}} class, add attributes that correspond to the new information you collect in {{{views/register.html}}}. The three most common attribute types are {{{db.IntegerProperty}}}, {{{db.TextProperty}}}, and {{{db.StringProperty}}}. {{{db.StringProperty}}} is for short strings, such as a name or email address; {{{db.TextProperty}}} is for longer fields, such as a paragraph of text.

  * {{{controllers/utils.py}}}: This file contains code that handles various page types in the application. The {{{RegisterHandler}}} class defines what happens on the registration page; by default its {{{post}}} method uses {{{form01}}} to define the variable {{{name}}} and store it with the {{{Student}}} instance in the datastore. Modify taht method to extract the information from the form you created in {{{views/register.html}}}. Use the information to populate the attributes you defined in {{{models/model.py}}}.

  * {{{bulkloader.yaml}}}: If you plan to download {{{Student}}} data (as described in [ExportCourseData Export Course Data]), add the new attributes to the transformer for {{{Student}}}.

=== Page layout ===

This page consists of three areas:
  * The *header* contains 
    * Course icon and name of your course.
    * Horizontal navigation bar, with two tabs on the left (Home and Registration) and an area with the person's address and a Logout link.
  * The *content area* contains a form for the prospective student to fill out.
  * The *footer* contains two links -- one to your website and one to the privacy conditions and terms for your course.

The app uses two files to render this page:
  * {{{views/base_registration.html}}} defines the header and footer areas.  See [ModifyTemplate Modify Course Template].
  * {{{views/register.html}}} defines the content of the registration form. If you change the questions asked, you'll have to change the code that handles the answers.

== Registration confirmation page ==

=== Page layout ===

Once a prospective student submits the registration form, the app displays the registration confirmation page:

http://wiki.course-builder.googlecode.com/git/images/registrationconfirmation-parts.png

This page displays a message when the student is registered. The default message upon successful registration includes information about joining the course's discussion forum and about joining another email alias for receiving course announcements. Be sure to modify this information to be applicable to your situation. See [WebForums Community Discussion] and [CreateEmailList Announcements-only Email List].

This page consists of the same three areas as the registration page and uses these files to render the page:
  * {{{views/base_registration.html}}} defines the header and footer areas. Note this is the same file the registration form uses, guaranteeing that these two pages have the same general look and feel.  See [ModifyTemplate Modify Course Template].
  * {{{views/confirmation.html}}} defines the content of the registration form.

== Testing changes ==

Changes you make to any file in the {{{views}}} directory appear automatically in your running development server.

That is, after you make a change to one of these files, simply load (or reload) a page that uses that view and the change appears. 

|| [https://groups.google.com/forum/?fromgroups#!categories/course-builder-forum/customize-and-deploy-course-builder-code Ask questions in the forum] ||