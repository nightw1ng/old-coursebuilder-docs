#summary Mechanics of creating a lesson.

<h1>Create Lessons</h1>

<font color=red><<TODO working here>></font>

<wiki:toc max-depth=2 />

When students click on a unit from the home page, they go to the page for the first lesson of the unit they chose. From there, they can go to any other lesson or activity in that unit:

<img src="https://www.corp.google.com/~vpg/no_crawl/cb/lesson.png" height=529 width=420 />

<font color=red><<TODO fix link>></font>

This page talks about the mechanics of creating a lesson page and its content. For information on what to put in your lesson, see [TwoDevelop Develop the Content without the Technology].

== What happens from this page ==

A lesson page is where you teach your prepared material. Typically, each lesson consists of a short video and text version of the content. You embed the video in the lesson page. You put the text version in a file at some other URL. 

Students can watch the video as many times as they like. If the click on *Text version*, a separate browser window appears with that content.

Everything else on the page is context and navigation.

== Page layout ==

This page consists of four areas:
  * The *header* contains 
    * Course icon and name of your course.
    * Horizontal navigation bar, with two tabs on the left (Course and Forum) and an area with the person's address and a Logout link.
    * A breadcrumb indicating where in the course hierarchy this page exists, such as<br>{{{Course > Unit 1 > Lesson 1}}}.
    * The name and number of the unit.
  * A *vertical navigation bar*, consisting of a list of all lessons and activities in the current unit.
  * The *content area* is more complex than for previous pages. It contains:
    * The name of this lesson.
    * A button to access a text version of the lesson.
    * A list of the lesson objectives.
    * The lesson video.
    * *Back* and *Next* buttons to navigate through the unit. (The first lesson of a unit does not include the *Back* button.)
  * The *footer* contains the same two links as for the registration pages. 

The app uses three files to render this page:
  * {{{views/base.html}}} defines the first two parts of the header and defines the footer.  See [ModifyTemplate Modify Course Template] for information about this file.
  * {{{views/unit.html}}} defines the second two lines of the header, the vertical navigation, and the content area.
  * {{{data/lesson.csv}}} contains the content of the content area for all lessons in your course.

=== Secondary header and vertical navigation ===

The second two lines of the header, the vertical navigation, and the content area are defined in {{{views/unit.html}}}. If you like the look of those areas, there's nothing for you to change in {{{views/unit.html}}}. 

=== Lesson content ===

{{{data/lesson.csv}}} contains the TODO. The first line describes the content of the other lines:
  {{{unit_id,unit_title,unit_exercise,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_slide_url,lesson_objectives,lesson_times}}}

Each line after that contains the information for an individual lesson, such as: 

  2,Interpreting results,,5,Different kinds of content,checkquiz25(),Lesson 2.5 Activity,https://docs.google.com/document/d/1yURF6jwcH0fJCup4m28bh2oPl-ApZwvr_GL-ndyLWKA/edit,hNrzmvPA1Zo,https://docs.google.com/a/powersearchingwithgoogle.com/presentation/d/1lCvpukwgsAjwDYc2md_qdnF4R9FFIetIoTgMMKO22bU/edit#slide=id.p35,"- Find different kinds of content efficiently: blogs, discussions, recipes, patents, books, 3D models, scholarly sources, and legal documents.",10 minutes

When you edit the file, leave the first line as is. Replace all of the other lines with the information relevant to your course. Each line consists of:

  * {{{unit_id:}}} An integer indicating which unit this lesson is part of.  (You must number units consecutively starting with 1.)
  * {{{unit_title:}}} The name of the unit.
  * {{{unit_exercise:}}} *Unused* <font color=red><<TODO is it really unused? I couldn't decide what it was for.>></font>
  * {{{lesson_id:}}} An integer indicating which lesson this is.  (You must number lessons in each unit consecutively starting with 1.)
  * {{{lesson_title:}}} The name of the lesson.
  * {{{lesson_activity:}}} The !JavaScript function to run to make the activity associated with this lesson appear. This function is always named {{{checkquiz}}}_*{{{NM}}}*_, where _*{{{N}}}*_ is the unit number and _*{{{M}}}*_ is the lesson number. <font color=red><<TODO This guess makes me queasy. I didn't actually find the code that does this; it just seemed logical.>></font>
  * {{{lesson_activity_name:}}} The name of the associated activity, to appear as the title of the activity page.
  * {{{lesson_notes:}}} URL of the text version of the lesson.
  * {{{lesson_video_id:}}} URL of the video version of the lesson.
  * {{{lesson_slide_url:}}} URL of a presentation containing the slides that appear in the video. <font color=red><<TODO which doesn't appear anywhere I can find.>></font>
  * {{{lesson_objectives:}}} Lesson objectives, to appear after the title of the lesson.
  * {{{lesson_times:}}} Approximately how long this lesson should take. <font color=red><<TODO which doesn't appear anywhere I can find.>></font>

== Working with Video ==

It is outside the scope of this documentation to tell you how to create video. We do have a few general tips that may make your life easier:

  * *In general*
    * Just be warned that creating a video takes a long time to do well. Leave ample time in your schedule for initial filming, editing, and any necessary refilming and reediting.

  * *Prior to filming*
    * Solidify the course objectives, assessments, and activities prior to filming.
    * Create the text version of all lessons prior to filming.
    * Basically, wait to film until everything else is done. Fixing video problems takes much longer than fixing textual problems.

  * *During filming*
    * Run through live demos quickly prior to recording.
    * Record separate feeds of the presenter and any computer material.
    * Have as many content creators present during filming as possible (in order to catch any issues so they can be reshot on the spot).

  * *Captioning*
    * Consider adding captions to your videos to help the hearing impaired and to help students who are not natives speakers of the language used in your videos.
    * Remember that edits may change the captions. Look into having someone clean up the captions.

  * *Editing*
    * Have a clear edit request process with deadlines for feedback and edits.
    * Maintain up-to-date documentation of edits requested and completed, including the state of the edits: edited, exported, compressed, uploaded, and other relevant information.
    * Collect as many edit requests as possible before beginning the editing process, and only complete the production cycle (through uploading) when absolutely necessary.
    * Have someone committed to going through the final videos and uploads to double-check everything.

Once you have created your videos, you need to post them to the internet to make them available to students. If you decide to post your videos on !YouTube, you may be interested in the following information:
  * [http://www.google.com/url?q=http%3A//www.youtube.com/create_channel&usg=AFQjCNHi_jsXh0k5m9xQXOWbwJzt7ojKTA Create your YouTube channel].
  * [http://support.google.com/youtube/bin/static.py?hl=en&guide=1719823&page=guide.cs How to upload videos]
  * Tools for working with videos: For information on posting videos to !YouTube, see [http://www.youtube.com/t/about_essentials#upload YouTube Essentials: Upload].