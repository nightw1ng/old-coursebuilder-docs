#summary How to modify the two base templates that all other pages in your app use.

<h1>Modify Course Template</h1>

<wiki:toc max-depth="2" /> 

Course Builder uses _view_ files as templates to determine the look and feel of all of the pages in your course. The view files are HTML files defined in the {{{views/}}} directory.

The templates work together hierarchically. Every page displayed for your course starts from either the {{{base_registration.html}}} template (for unenrolled people) or the {{{base.html}}} template (for enrolled people). The two base templates define the overall HTML structure of a page. 

The other views, such as {{{activity.html}}}, fill in more structure for a specific type of page. Finally, files outside of {{{views}}} may fill in the content for a particular page, such as {{{activity-1.1.js}}}.

For more information on the structure of these pages, see [https://developers.google.com/appengine/docs/python/gettingstartedpython27/templates Using templates] for an introduction and then check out the [http://jinja.pocoo.org/docs Jinja2 documentation].

== Registration ==
Course Builder uses the following files to render the Registration page:
  * {{{views/base_registration.html}}} defines the header and footer areas. This page is used by all pages displayed to an unregistered person. 
  * {{{views/confirmation.html}}} defines the content of the registration form.
  * {{{views/preview.html}}} defines the structure of the content area. This page is very similar to its registered counterpart, {{{views/course.html}}}.
  * {{{views/register.html}}} defines the content of the registration form.
  * {{{views/summary.html}}} provides the course description and other introductory material.   This page is also used by {{{views/course.html}}}.
The [CreateRegistration#Registration_confirmation_page Registration confirmation page] additionally uses:
  * {{{views/confirmation.html}}} defines the content of the registration form.
  
We strongly suggest you deploy Course Builder to Google App Engine and create your course in the browser after doing so. This places the course in the Google App Engine datastore. If you wanted to change the content of the example course on disk, you would change the .csv files in the {{{data/}}} directory.
  * {{{data/unit.csv}}} provides the actual content of the content area.   This page is also used by {{{views/course.html}}}.

== Course home page ==
The following files render the course home page (*Course* in the navigation bar):

  * {{{views/base.html}}} defines the header and footer areas.  This page is used by all pages displayed to a registered student.
  * {{{views/course.html}}} defines the structure of the content area. This page is very similar to its unregistered counterpart, {{{views/preview.html}}}.
  * {{{views/summary.html}}} provides the course description and other introductory material.  This page is also used by {{{views/preview.html}}}.

We strongly suggest you deploy Course Builder to Google App Engine and create your course in the browser after doing so. This places the course in the Google App Engine datastore. If you wanted to change the content of the example course on disk, you would change the .csv files in the {{{data/}}} directory.

  * {{{data/unit.csv}}} provides the actual content of the content area.  This page is also used by {{{views/preview.html}}}.

The first line describes the content of the other lines:
  {{{id,type,unit_id,title,release_date,now_available}}}

Each line after that contains the information for an individual part of the course, such as:
  {{{1,A,Pre,Pre-course assessment,,True}}}<br>
  {{{2,U,1,Introduction,available July 10,True}}}<br>
  {{{...}}}<br>
  {{{11,O,http://www.youtube.com/watch?v=dwlpViuIYgU&feature=player_embedded,Hang Out with Search Experts Video,,True}}}

If you edit the file, leave the first line as is. Replace all of the other lines with the information relevant to your course. The template files and various Python files refer to these fields when displaying course information.  Each line contains the following fields:

  * {{{id:}}} An integer representing this item. These integers must start at 1 and be in order.
  * {{{type:}}} One of A, U, or O, depending on whether this line represents an assessment, a unit, or something else (such as a link to a video or to an upcoming Hangout On Air).
  * {{{unit_id:}}} An id for this item. Its value depends on the type:
    * For an assessment (type=A): the suffix of the corresponding {{{assessment-}}}*{{{SUFFIX}}}*{{{.js}}} file. By default, one of {{{Pre}}}, {{{Mid}}}, or {{{Fin}}}. See [CreateAssessments#Writing_assessments Writing assessments].
    * For a unit (type=U): an integer representing the unit number. 
    * For something else (type=O): a URL pointing to that thing.
  * {{{title:}}} The text to describe this item.
  * {{{release_date:}}} When this release will be available to students. This string appears only if {{{now_available}}} is {{{False}}}. Optional.
  * {{{now_available:}}} A Boolean representing whether or not students can currently access this item. If {{{False}}}, the title is not a link.  (Note that case is important in this value; it must be either {{{True}}} or {{{False}}}.)

== Lesson ==
The following files render a lesson page:
  * {{{views/base.html}}} defines the first two parts of the header and defines the footer.  This page is used by all pages displayed to a registered student.
  * {{{views/unit.html}}} defines the second two lines of the header, the vertical navigation, and the content area.

We strongly suggest you deploy Course Builder to Google App Engine and create your course in the browser after doing so. This places the course in the Google App Engine datastore. If you wanted to change the content of the example course on disk, you would change the .csv files in the {{{data/}}} directory.
  * {{{data/lesson.csv}}} contains the content of the content area for all lessons in your example course on disk.

== Activity ==
The following files render an activity page:
  * {{{views/base.html}}} is the same as for lessons.  This page is used by all pages displayed to a registered student.
  * {{{views/activity.html}}} defines the same parts as does {{{views/unit.html}}} for lessons. You probably want to be consistent in these files.

We strongly suggest you deploy Course Builder to Google App Engine and create your course in the browser after doing so. This places the course in the Google App Engine datastore. If you wanted to change the activity questions of the example course on disk, you would change the .js files in the {{{assets/js/}}} directory.
  * {{{assets/js/activity-}}}_*{{{N.M}}}*_{{{.js}}} contains a !JavaScript array that fills in the actual question and answer areas for the activity. Each activity section has its own file.

== Assessment ==
The following files render an assessment page:
  * {{{views/base.html}}} defines the header and footer areas.  This page is used by all pages displayed to a registered student.
  * {{{views/assessment.html}}} defines the structure of the content area.

We strongly suggest you deploy Course Builder to Google App Engine and create your course in the browser after doing so. This places the course in the Google App Engine datastore. If you wanted to change the assessment questions of the example course on disk, you would change the .js files in the {{{assets/js/}}} directory.
  * {{{assets/js/assessment-}}}_*{{SUFFIX}}}*_{{{.js}}} contains a !JavaScript array that fills in the actual question and answer areas for the assessment. Each assessment has its own file.

== Discussion forum ==
The following files render the discussion page:
  * {{{views/base.html}}} defines the header and footer areas.  This page is used by all pages displayed to a registered student.
  * {{{views/forum.html}}} defines the structure of the content area. It also has a link to the discussion forum. You need to change that to the link you create for your forum. See [WebForums Community Discussion].

== Announcements ==
The followinng files render the announcement page:
  * {{{views/base.html}}} defines the header and footer areas.  This page is used by all pages displayed to a registered student.
  * {{{views/announcements.html}}} defines the structure of the content area and contains the actual announcements.

== Student profile ==
The following files render the student profile page:
  * {{{views/base.html}}} defines the header and footer areas.  This page is used by all pages displayed to a registered student.
  * {{{views/student_profile.html}}} defines the structure of the content area.
  * {{{views/base_registration.html}}} defines the header and footer areas.  This page is used by all pages displayed to an unregistered person. 
  * {{{views/unenroll_confirmation_check.html}}} defines the content of the page that asks for confirmation before unenrolling <br> {{{views/unenroll_confirmation.html}}} defines the content of the page that confirms the student is actually unenrolled.

== Deleting the Course Builder footer text ==
On [AdminPage Administrator] and [Dashboard Dashboard] pages, there is footer text that states "Powered by Course Builder." You are not obligated to keep this and you may delete it.
  * For the Administrator page, go to {{{/modules/admin/view.html}}} and delete the text in the HTML.
  * For the Dashboard page, go to {{{/modules/dashboard/view.html}}} and delete the text in the HTML.

== Testing changes ==
Changes you make to any file in the {{{views}}} directory appear automatically in your running development server. That is, after you make a change to one of these files, simply load (or reload) a page that uses that view and the change appears.

To see how to make these changes in your live, deployed course, see [DeployAgain Subsequent Deployments to Google App Engine].

|| [https://groups.google.com/forum/?fromgroups#!categories/course-builder-forum/customize-and-deploy-course-builder-code Ask questions in the forum] ||