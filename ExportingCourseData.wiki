#summary Describes course data and how to export your course data.

<h1>Export Course Data</h1>
* This page is an early working draft.*

== Introduction ==

This page describes the course data stored by Course Builder and how to export your data into text files in CSV format. We’ll start with an overview of the Course Builder data, followed by the steps for exporting the data. Before getting started, make sure you’ve downloaded and installed the Python App Engine SDK and that you have Python 2.7 on your system. (For information on downloading and installing the Python App Engine SDK, see [https://code.google.com/p/course-builder/wiki/AppEngine Work with App Engine].)

== Data from Course Builder ==

The following table describes the data Course Builder stores for your course. Course Builder stores five kinds of data: Student, Class, Email List, Lesson, and Page Cache. TODO: Verify kinds to document and add to bulkloader.yaml example.

*Class* - 
|| *Name* || *Type* || *Description* ||
|| {{{class_id}}} || STRING  ||  ||
|| {{{class_title}}} || STRING  ||  ||
|| {{{release_date}}} || STRING  ||  ||
|| {{{class_exercise}}} || STRING  ||  ||

*Lesson* - 
|| *Name* || *Type* || *Description* ||
|| {{{}}} || STRING  ||  ||

*Student* - Data on the student’s work on the class.
|| *Name* || *Type* || *Description* ||
|| {{{midterm_score}}} || STRING  || The student’s midterm score. A numeric value or empty for no score. ||
|| {{{final_answer}}} || STRING	 ||  ||
|| {{{enrolled_date}}} || STRING	  ||  ||
|| {{{final_score}}} ||	STRING  || The student’s final score. A numeric value or empty for no score. ||
|| {{{preclass_answer}}} || STRING  ||  ||	
|| {{{overall_score}}} || STRING || The student’s overall score. A numeric value or empty for no score. ||
|| {{{midterm_answer}}} || STRING  ||  ||
|| {{{cert_name}}} || STRING  ||  ||
|| {{{marketing}}} ||	STRING  ||  ||	
|| {{{email}}}  ||STRING  ||  ||

*Email List* - 
|| *Name* || *Type* || *Description* ||
|| {{{}}} || STRING  ||  ||

*Page Cache* - 
|| *Name* || *Type* || *Description* ||
|| {{{}}} || STRING  ||  ||

== Export your class data ==

The Course Builder application stores data in App Engine’s High Replication datastore. You download course data use the App Engine bulk loader tool, which is included with the Python App Engine SDK for your platform. (For information on downloading and installing the Python App Engine SDK, see [https://code.google.com/p/course-builder/wiki/AppEngine Work with App Engine].) We’ll use CSV format for this example so you can upload data into a spreadsheet or into Fusion Tables for viewing and analysis.

Follow these steps to export Course Builder data.

 # Create a new folder/directory that will hold your exported data.
 # Open the Terminal Application and change to your data directory.
  * Mac - Applications/Utilities/Terminal.
  * PC - ?
  * Linux or other POSIX-compliant system: ?
 # Create a new configuration file called {{{bulkloader.yaml}}}, copy the following information into the file, and save the file.
{{{
# Autogenerated bulkloader.yaml file.
# You must edit this file before using it. TODO: Remove this line when done.
# At a minimum address the items marked with TODO:
#  * Fill in connector and connector_options
#  * Review the property_map.
#    - Ensure the 'external_name' matches the name of your CSV column,
#      XML tag, etc.
#    - Check that __key__ property is what you want. Its value will become
#      the key name on import, and on export the value will be the Key
#      object.  If you would like automatic key generation on import and
#      omitting the key on export, you can remove the entire __key__
#      property from the property map.

# If you have module(s) with your model classes, add them here. Also
# change the kind properties to model_class.
python_preamble:
- import: base64
- import: re
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.ext.db
- import: google.appengine.api.datastore
- import: google.appengine.api.users

transformers:
- kind: Class
  connector: csv
  property_map:
    - property: id
      external_name: class_id
      import_transform: int
    - property: title
      external_name: class_title
    - property: exercise
      external_name: class_exercise
    - property: release_date
      external_name: release_date
- kind: Lesson
  connector: csv
  property_map:
    - property: class_id
      external_name: class_id
      import_transform: int
    - property: id
      external_name: lesson_id
      import_transform: int
    - property: title
      external_name: lesson_title
    - property: activity
      external_name: lesson_activity
    - property: activity_title
      external_name: lesson_activity_name
    - property: video
      external_name: lesson_video_id
    - property: slide
      external_name: lesson_slide_url
    - property: objectives
      external_name: lesson_objectives
    - property: notes
      external_name: lesson_notes
    - property: duration
      external_name: lesson_times
- kind: Student
  connector: csv
  property_map:
    - property: __key__
      external_name: email
      export_transform: datastore.Key.name
    - property: cert_name
      external_name: cert_name
    - property: preclass_answer
      external_name: preclass_answer
    - property: midterm_answer
      external_name: midterm_answer
    - property: final_answer
      external_name: final_answer
    - property: midterm_score
      external_name: midterm_score
      import_transform: transform.none_if_empty(int)
    - property: final_score
      external_name: final_score
      import_transform: transform.none_if_empty(int)
    - property: overall_score
      external_name: overall_score
      import_transform: transform.none_if_empty(int)
    - property: marketing
      external_name: marketing
    - property: enrolled_date
      external_name: enrolled_date
}}}

 # Create an application-specific password for your class (save/remember the password). For help, see [http://support.google.com/accounts/bin/answer.py?hl=en&answer=185833 Signing in using application-specific passwords].
 # Run the following command and type your application-specific password at the prompt:
{{{
# email = Your Google email address.
# config_file = Your Google email address.
# filename = The name of your exported data file.
# kind = The name of the model to export.
# url = The URL for the server, followed with /remote_api. 
$ appcfg.py download_data --email=<email> --config_file=<config-file> --filename=<data_filename> --kind=<what to export> --url=<url>

# Example.
$ appcfg.py download_data --email=molson@google.com --config_file=bulkloader.yaml --filename=student.csv --kind=Student --url=http://myclass.google.com/remote_api
}}}


|| *File* || *Description* ||
|| {{{bulkloader-log-<timestamp>}}} || A log file showing the processing steps. Use the --db_filename=skip flag to skip generating this file.|| 
|| {{{bulkloader-progress-<timestamp>.sql3}}} || A SQL3 database file showing progress. Use the --db_filename=skip flag to skip generating this file. || 
|| {{{bulkloader-results-<timestamp>.sql3}}} || The exported class data in SQL3 format. Use the --db_filename=skip flag to skip generating this file. || 
|| {{{<data_filename>.csv}}} || The exported class data in CSV format. || 